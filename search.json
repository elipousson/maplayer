[{"path":"https://elipousson.github.io/maplayer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Eli Pousson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/maplayer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/maplayer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). maplayer: Make Map Layers ggplot2. https://github.com/elipousson/maplayer, https://elipousson.github.io/maplayer/.","code":"@Manual{,   title = {maplayer: Make Map Layers With ggplot2},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/maplayer, https://elipousson.github.io/maplayer/}, }"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"maplayer-","dir":"","previous_headings":"","what":"Make Map Layers With ggplot2","title":"Make Map Layers With ggplot2","text":"goal maplayer provide consistent set functions creating map layers using simple feature ({sf}) data, {ggplot2} package, variety ggplot2 extension packages.","code":""},{"path":"https://elipousson.github.io/maplayer/index.html","id":"basic-functions","dir":"","previous_headings":"","what":"Basic functions","title":"Make Map Layers With ggplot2","text":"main layers work data location sf object : layer_location_data() layer_location() layer_location_context() several layers can work single sf object input data: layer_markers() layer_numbers() layer_frame() layer_scaled() layer_mask() layer_neatline() Finally, layers require additional packages (listed Suggests): layer_labelled() optionally uses {ggrepel} {geomtextpath} layer_mapbox() uses {mapboxapi} (requires API key) layer_marked() uses {ggforce} layer_icon() uses {ggsvg} layer_inset() uses {patchwork} optionally {figpatch} (stamp_inset_img()) package also allows optional use packages designed transforming spatial data modifying ggplot2 maps. include: {smoothr} (required use smooth_params argument) {ggfx} (required use shadow_params argument) Many functions {maplayer} originally developed {overedge} package {mapbaltimore} package. {overedge} package split three smaller packages including {maplayer}, {getdata}, {sfext}.","code":""},{"path":"https://elipousson.github.io/maplayer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make Map Layers With ggplot2","text":"can install development version maplayer like :","code":"pak::pkg_install(\"elipousson/maplayer\")"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make Map Layers With ggplot2","text":"","code":"library(maplayer) library(ggplot2) library(sf) #> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"add-icons-to-a-map","dir":"","previous_headings":"Example","what":"Add icons to a map","title":"Make Map Layers With ggplot2","text":"layer_icon() wraps ggsvg::geom_point_svg() provide convenient way make icon maps. can create maps using single named icon matches one icons map_icons.","code":"nc <- read_sf(system.file(\"shape/nc.shp\", package = \"sf\")) nc <- st_transform(nc, 3857) theme_set(theme_void())  nc_map <-   ggplot() +   geom_sf(data = nc)  nc_map +   layer_icon(data = nc, icon = \"point-start\", size = 8)"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"add-a-neatline-to-a-map","dir":"","previous_headings":"Example","what":"Add a neatline to a map","title":"Make Map Layers With ggplot2","text":"layer_neatline() hides major grid lines axis label default. function useful draw neatline around map set aspect ratio.  layer_neatline() can also used focus specific area map option apply buffer distance ratio diagonal distance input data. label_axes hide_grid parameters override set ggplot theme.","code":"nc_map +   layer_neatline(     data = nc,     asp = \"6:4\",     color = \"gray60\", linewidth = 2, linetype = \"dashed\"   ) nc_map +   layer_neatline(     data = nc[1, ],     diag_ratio = 0.5,     asp = 1,     color = \"black\",     label_axes = \"--EN\",     hide_grid = FALSE,     expand = FALSE   )"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"add-labels-or-numbers-to-a-map","dir":"","previous_headings":"Example","what":"Add labels or numbers to a map","title":"Make Map Layers With ggplot2","text":"","code":"nc_map +   layer_labelled(     data = nc[c(10, 20, 30, 40), ],     geom = \"sf_label\",     mapping = aes(label = NAME)   ) nc_map +   layer_numbers(     data = nc[c(10, 20, 30, 40), ],     aes(fill = NAME),     num_style = \"Alph\",     size = 3.5   ) +   guides(fill = \"none\")"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"create-a-frame-around-a-feature","dir":"","previous_headings":"Example","what":"Create a frame around a feature","title":"Make Map Layers With ggplot2","text":"","code":"circle_nc <-   ggplot(data = nc) +   # layer_frame requires a data arg if neatline = TRUE   layer_frame(data = nc, style = \"circle\") +   # layer_location_data can inherit data   layer_location_data()  circle_nc"},{"path":"https://elipousson.github.io/maplayer/index.html","id":"create-an-inset-map","dir":"","previous_headings":"Example","what":"Create an inset map","title":"Make Map Layers With ggplot2","text":"","code":"nc_context <-   layer_frame(     data = nc,     linetype = \"twodash\",     neatline = FALSE,     basemap = TRUE   ) +   layer_location_context(     location = nc[25, ],     context = nc,     context_params = list(fill = \"white\", color = \"gray80\", alpha = 1),     neatline = FALSE   )  nc_context +   layer_neatline(     data = nc[25, ],     dist = 15,     unit = \"mi\",     asp = 1   ) +   layer_inset(     inset = nc_context,     scale = 1.5   )"},{"path":"https://elipousson.github.io/maplayer/reference/labs_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to a ggplot2 plot or map — labs_ext","title":"Add labels to a ggplot2 plot or map — labs_ext","text":"helper function converts strings glue strings title, subtitle, caption. progress.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/labs_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to a ggplot2 plot or map — labs_ext","text":"","code":"labs_ext(   title = ggplot2::waiver(),   subtitle = ggplot2::waiver(),   caption = ggplot2::waiver(),   tag = ggplot2::waiver(),   alt = ggplot2::waiver(),   fill = ggplot2::waiver(),   color = ggplot2::waiver(),   size = ggplot2::waiver(),   shape = ggplot2::waiver(),   alpha = ggplot2::waiver(),   linewidth = ggplot2::waiver(),   location = NULL,   name_col = NULL,   source = NULL,   .na = \"NA\",   .null = NULL,   .envir = parent.frame(),   use_md = FALSE,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/labs_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to a ggplot2 plot or map — labs_ext","text":"title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default. tag text tag label displayed top-left plot default. alt Text used generation alt-text plot. fill, color, size, shape, alpha, linewidth Optional labels mapped aesthetics. Defaults ggplot2::waiver(). location sf bbox object character string name_col Column name holding name identifier distinct places within simple feature collection provided location. supported bbox objects. source Data source(s). yet used supported function. .na, .null Additional parameters passed glue::glue() .envir Environment passed glue::glue(); defaults parent.frame(). use_md TRUE, use ggtext::element_markdown() element plot title, subtitle, caption. Defaults FALSE. ... list new name-value pairs. name aesthetic.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a layer with an arrow or segment from and to specified locations — layer_arrow","title":"Create a layer with an arrow or segment from and to specified locations — layer_arrow","text":"wrapper ggplot2::geom_segment, ggplot2::geom_curve(), ggarchery::geom_arrowsegment(), ggforce::geom_diagonal0(), ggforce::geom_link() makes easier specify start end segment using object supported sfext::as_xy() function.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a layer with an arrow or segment from and to specified locations — layer_arrow","text":"","code":"layer_arrow(   mapping = NULL,   data = NULL,   crs = NULL,   from,   to,   geom = \"segment\",   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a layer with an arrow or segment from and to specified locations — layer_arrow","text":"mapping aesthetic mapping overwritten x, y, xend, yend values based provided parameters. data Required character vectors sfext::as_xy() crs character numeric reference coordinate reference system supported sf::st_crs() another  sf, sfc, bbox object used provide crs. , Required. Passed x parameter sfext::as_xy() (using nm = c(\"xend\", \"yend\")) parameter. geom Character string geom use  c(\"segment\", \"curve\", \"arrowsegment\", \"diagonal0\", \"link\") geom function. ... Additional parameters passed function specified geom paramter.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a layer with an arrow or segment from and to specified locations — layer_arrow","text":"","code":"library(ggplot2)  nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))  nc_map <- ggplot(data = nc) +   geom_sf()  nc_map +   layer_arrow(     data = nc,     from = c(\"xmin\", \"ymin\"),     to = c(\"xmid\", \"ymax\"),   )   nc_map +   layer_arrow(     data = nc,     from = c(\"xmin\", \"ymin\"),     to = c(\"xmid\", \"ymax\"),     geom = \"curve\",     curvature = 0.25   )   nc_map +   layer_arrow(     data = nc,     from = c(\"xmax\", \"ymin\"),     to = c(\"xmid\", \"ymax\"),     geom = \"arrowsegment\"   )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer for counting occurrences of data in spatial relation a location or\nother sf object — layer_count","title":"Layer for counting occurrences of data in spatial relation a location or\nother sf object — layer_count","text":"Wraps sfext::count_sf_ext(). Specification parameters function may complex may changed future.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer for counting occurrences of data in spatial relation a location or\nother sf object — layer_count","text":"","code":"layer_count(   data,   location = NULL,   y = NULL,   join = sf::st_intersects,   largest = TRUE,   replace_na = FALSE,   lims = NULL,   .id = \"id\",   grid_params = list(alpha = 1, color = NA),   show_data = FALSE,   data_params = list(mapping = aes(), alpha = 0.75, size = 1),   show_label = FALSE,   label_params = NULL,   scale_fn = ggplot2::scale_fill_continuous,   scale_params = list(type = \"viridis\", breaks = scales::breaks_pretty(n = 4)),   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer for counting occurrences of data in spatial relation a location or\nother sf object — layer_count","text":"data Data count relationship y location Passed x parameter sfext::count_sf_ext(). y NULL (default), y defaults sf object created st_make_grid_ext() using x data (x NULL) x parameter st_make_grid_ext(). NULL, y must sf object column name .id (defaults \"id\"). join geometry predicate function profile st_intersects; see details largest logical; TRUE, return x features augmented fields y largest overlap features x; see https://github.com/r-spatial/sf/issues/578 replace_na TRUE, replace NA values count 0. lims Optional numeric vector minimum minimum maximum count values. provided, values minimum set minimum values maximum set maximum. one value provided, assumed minimum limit. .id name use cell id column. Defaults \"id\". grid_params Passed layer_location_data() style foreground grid fill based count. show_data TRUE, add background layer data stack returned function. TRUE grid_params includes fixed aesthetic alpha, divide alpha half ensure background data visible filled grid. data_params Passed layer_location_data() style background layer based data. show_label TRUE, add layer labels stack returned function. label_params Passed layer_labelled() foreground labels fill based count. scale_fn, scale_params Scale function parameters. Defaults ggplot2::scale_fill_continuous(). ... Arguments passed sfext::count_sf_ext wt <data-masking> Frequency weights. Can NULL variable: NULL (default), counts number rows group. variable, computes sum(wt) group. sort TRUE, show largest groups top. keep_na TRUE, filter NA values count. Ignored replace_na TRUE. geometry TRUE (default) return sf object. FALSE, return data frame. name name new column output. omitted, default n. already column called n, use nn. column called n nn, 'll use nnn, , adding ns gets new name.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer for counting occurrences of data in spatial relation a location or\nother sf object — layer_count","text":"","code":"nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\")) data <- sf::st_sample(nc, 75) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  ggplot() +   layer_count(data = data, location = nc)   ggplot() +   layer_count(data = data, y = nc, .id = \"FIPS\")"},{"path":"https://elipousson.github.io/maplayer/reference/layer_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a frame layer around a simple feature object — layer_frame","title":"Create a frame layer around a simple feature object — layer_frame","text":"Create circle square can used frame around simple feature object using fixed aesthetics fill, color, size, linetype. function helpful background inset map intended use layer_inset().","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a frame layer around a simple feature object — layer_frame","text":"","code":"layer_frame(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   style = \"circle\",   scale = 1,   rotate = 0,   inscribed = FALSE,   color = \"black\",   linewidth = 0.5,   linetype = \"solid\",   fill = \"white\",   neatline = TRUE,   expand = TRUE,   basemap = FALSE,   union = TRUE,   by_feature = FALSE,   ... )  make_frame(   x,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   style = \"circle\",   scale = 1,   rotate = 0,   inscribed = FALSE,   dTolerance = 0,   union = TRUE,   by_feature = FALSE )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a frame layer around a simple feature object — layer_frame","text":"data, x sf, sfc, bbox object create frame around. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. style Style framing shape add, \"circle\", \"square\", \"rect\", \"buffer\", \"none\". style \"buffer\", asp parameter ignored. style \"none\", dist, diag_ratio, asp parameters ignored input data used frame. scale numeric; scale factor, Default: 1 rotate numeric; degrees rotate (-360 360), Default: 0 inscribed TRUE, returned geometry inscribed within x, FALSE (default), geometry circumscribed. fill, color, linewidth, linetype Fixed aesthetics frame, passed layer_location_data. neatline TRUE, return list layers includes layer_neatline expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). union TRUE, pass data sf::st_union() buffering creating frame; defaults TRUE. by_feature TRUE, create frame around feature. FALSE (default), union provided features creating frame. ... Arguments passed layer_location_data layer_fn ggplot2 geom custom function using lambda syntax. Use passing custom mapping functions layer_location_data beyond supported geom options. label_col Column name id column text labels pass text geom. smooth_params Optional. Logical list parameters passed smoothr::smooth(). TRUE, apply smoothr::smooth() location data using default parameters. smooth_params ignored data NULL (inheriting data ggplot). shadow_params Optional. Logical list parameters passed ggfx::with_shadow(). TRUE, apply ggfx::with_shadow() layer using default parameters. shadow_params ignored layer_fn provided. location sf object. multiple areas provided, unioned single sf object using sf::st_union() fileext,filetype File extension type use passing parameters sfext::read_sf_download() sfext::read_sf_pkg() (required extdata cached data). fn Function apply data filtering location returning function. crop TRUE, x cropped y using sf::st_crop(). trim TRUE, x trimmed y st_trim(). crs Coordinate reference system return. mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. dTolerance numeric; tolerance parameter, specified feature geometry. run st_simplify, input data specified long-lat coordinates sf_use_s2() returns TRUE, value dTolerance must specified meters.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a frame layer around a simple feature object — layer_frame","text":"make_frame() helper function calls sfext::st_circle() (style = \"circle\"), sfext::st_square()  (style = \"square\"), sfext::st_bbox_ext() (style = \"rect\"), sfext::st_buffer_ext() (style = \"none\"). neatline TRUE, layer_frame() returns list two geoms, second layer_neatline() layer created using frame object data parameters bgcolor = \"none\" color = \"none\". asp set 1 style \"circle\" \"square\" provided asp value otherwise. Additional parameters passed ... can include additional fixed aesthetics (e.g. alpha). using fn parameter, function applied frame simple feature object created make_frame() (original input data).","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a frame layer around a simple feature object — layer_frame","text":"","code":"nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))  raleigh_msa <-   getdata::get_location(     type = nc,     name_col = \"NAME\",     name =  c(\"Franklin\", \"Johnston\", \"Wake\"),     crs = 3857     )  ggplot() +   layer_frame(     data = raleigh_msa,     frame = \"circle\",     fill = \"lightyellow\",     inscribed = FALSE   ) +   layer_location_data(     data = raleigh_msa,     mapping = aes(fill = NAME),     alpha = 0.5   ) +   ggplot2::guides(     fill = \"none\"   ) #> Warning: Ignoring unknown parameters: `frame`"},{"path":"https://elipousson.github.io/maplayer/reference/layer_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Make group layers — layer_grouped","title":"Make group layers — layer_grouped","text":"Can used make multiple layers multiple maps based grouping variable.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make group layers — layer_grouped","text":"","code":"layer_grouped(   data,   mapping = NULL,   groupname_col = \"group\",   label_col = \"name\",   geom = \"sf\",   basemap = FALSE,   palette = NULL,   aesthetics = \"fill\",   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make group layers — layer_grouped","text":"data Character string (e.g. url, file path, name data package) spatial data sf, sfc, bbox  object geometry overlapping location. data NULL, unnamed parameters passed sfext::read_sf_ext() bbox based location. data NULL data.frame, url, file path, bbox, conversion sf object still always attempted sfext::as_sf(). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. groupname_col Group column name. Defaults \"group\". label_col Column name id column text labels pass text geom. geom character string indicating ggplot2 geom use, Default: 'sf'. Options include \"sf\" (ggplot2::geom_sf()), \"icon\" (layer_icon()), \"markers\" (layer_markers()), \"sf_text\" (ggplot2::geom_sf_text()), \"sf_label\" (ggplot2::geom_sf_label()). See details full list. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). palette Name palette string. Must form packagename::palettename. aesthetics Aesthetic map groupname_col. Defaults \"fill\"; also supports \"color\" c(\"fill\", \"color\"). ... Additional parameters passed layer_location_data()","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_grouped.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make group layers — layer_grouped","text":"Scales applied palette aesthetic provided basemap set TRUE.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggsvg to add a layer with icons at feature locations — layer_icon","title":"Use ggsvg to add a layer with icons at feature locations — layer_icon","text":"Use ggsvg::geom_point_svg() function plot icons using centroids input simple feature object set icon location.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggsvg to add a layer with icons at feature locations — layer_icon","text":"","code":"layer_icon(   data = NULL,   iconname_col = \"icon\",   icon = NULL,   px = NULL,   source = NULL,   svg = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   ... )  geom_sf_icon(   data = NULL,   iconname_col = \"icon\",   icon = NULL,   px = NULL,   source = NULL,   svg = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggsvg to add a layer with icons at feature locations — layer_icon","text":"data sf object. objects polygon geometry converted points using sf::st_centroid(). iconname_col column name input data use icon name. name matches multiple icons, first match map_icons used. may provide px source value select different match needed , case, icons must use px source value. Note icon column mapped ggplot2::aes(). icon Icon name. Default NULL. icon provided, iconname_col ignored. See map_icons$name supported options. px Icon size pixels. See map_icons$px supported options. Optional may necessary differentiate icons duplicate names. source Icon source. See map_icons$repo supported options. Optional may required differentiate icons duplicate names. svg Optional. Custom file path URL SVG pass svg parameter  ggsvg::geom_point_svg().  icon provided, svg ignored. crs Coordinate reference system; defaults NULL. ... Arguments passed ggsvg::geom_point_svg defaults Advanced option.  named list default values new aesthetics.        general necessary using css() aesthetics,        default value determined based upon CSS property e.g. stroke        property default value \"black\" Set `options(GGSVG_DEBUG = TRUE)` verbose debugging cause `ggsvg` output (console) final SVG every element plot.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_icon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use ggsvg to add a layer with icons at feature locations — layer_icon","text":"","code":"nc <- getdata::get_location(type = system.file(\"shape/nc.shp\", package = \"sf\"), crs = 3857)  basemap <-   ggplot2::ggplot() +   ggplot2::theme_void() +   layer_location_data(data = nc)  # icon can be set by name matching a name from map_icons basemap +   layer_icon(data = nc, icon = \"point-start\", size = 8)   # layer_icon can also use a column from the sf object nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)  basemap +   layer_icon(data = nc, iconname_col = \"icon\", size = 6)"},{"path":"https://elipousson.github.io/maplayer/reference/layer_image_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggpath to create a layer with images at locations — layer_image_path","title":"Use ggpath to create a layer with images at locations — layer_image_path","text":"Use ggpath::geom_from_path() function sfext::read_sf_exif() stat = \"sf_coordinates\" create layer showing images locations.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_image_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggpath to create a layer with images at locations — layer_image_path","text":"","code":"layer_image_path(   data = NULL,   path = NULL,   path_col = \"path\",   width = 0.1,   crs = getOption(\"maplayer.crs\", 3857),   segment_params = NULL,   neatline = FALSE,   basemap = FALSE,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_image_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggpath to create a layer with images at locations — layer_image_path","text":"data sf object column containing file paths name path_col argument. Optional \"path\" provided sfext::read_sf_exif(). Required path NULL. path provided, data ignored. path path folder file. path_col Column name file paths data. Defaults \"path\" (path name used data returned sfext::read_sf_exif()) width Width image npc (Normalised Parent Coordinates) passed ggpath::geom_from_path(); defaults 0.1. crs coordinate reference system (CRS) data projected plotting. specified, use CRS defined first sf layer plot. segment_params implemented: parameters define segments connecting images location. neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer set_neatline(). logical TRUE, add neatline layer using data, crs additional parameters passed ... logical FALSE, return x . object layer_neatline(), add . basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). ... Additional parameters pass exiftoolr::exif_read()","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","title":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","text":"layer_inset() useful want add inset plot.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","text":"","code":"layer_inset(   map = NULL,   inset = NULL,   position = \"bottomright\",   scale = 1,   nudge_x = 0,   nudge_y = 0,   align_to = \"full\",   ... )  make_inset_map(   map = NULL,   inset = NULL,   location = NULL,   context = NULL,   position = \"bottomright\",   scale = 1,   nudge_x = 0,   nudge_y = 0,   align_to = \"full\",   ... )  stamp_inset_img(   path,   plot = NULL,   img_margin = ggplot2::margin(0, 0, 0, 0),   position = \"bottomright\",   scale = 1,   nudge_x = 0,   nudge_y = 0,   align_to = \"full\",   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","text":"inset plot map created ggplot2() passed p argument patchwork::inset_element(). location context provided make_inset_map(), inset optional provided value replaced new layer created layer_location_context(). position inset map position, Default: 'bottomright'. position, nudge_x, nudge_y used set left, bottom, top, right parameters patchwork::inset_element(). scale scale inset map, defaults 1. nudge_x, nudge_y nudge x /y position inset map, Default: 0. align_to Specifies left, bottom, etc relative . Either 'panel' (default), 'plot', 'full'. ... Arguments passed patchwork::inset_element p grob, ggplot, patchwork, formula, raster, nativeRaster object add inset left,bottom,right,top numerics units giving location outer bounds. given numerics converted npc units. on_top Logical. inset placed top plot (background)? clip Logical. clipping performed inset? ignore_tag Logical. autotagging ignore inset? location location passed layer_location_context(). can sf object, ggplot layer, formula function. formula function, applied context data passed location function results used data location layer. context sf object context area ggplot layer representing context. path image path passed figpatch::fig() stamp_inset_img() plot, map plot map created ggplot2() img_margin margin around image stamp_inset_img() created ggplot2::margin(). Defaults margin.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","text":"ggplot2 map inset map added using patchwork","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_inset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use patchwork to create a map with an inset context map or figpatch to stamp\nan inset image — layer_inset","text":"make_inset_map() useful creating inset map just using location fewer options customization. case, ... parameters passed layer_location_context() instead patchwork::inset_element() stamp_inset_img() useful applying logo map. ... parameters passed figpatch::fig() Note, currently, plots created layer_inset() work map_ggsave_ext() using single_file = TRUE parameter.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Label simple feature objects in a location — layer_labelled","title":"Label simple feature objects in a location — layer_labelled","text":"Label markers, streets, areas, simple feature objects using following geoms: \"text\", \"sf_text\", \"label\", \"sf_label\", \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\".","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label simple feature objects in a location — layer_labelled","text":"","code":"layer_labelled(   data,   location = NULL,   geom = \"text\",   fn = NULL,   label_col = NULL,   mapping = NULL,   union = FALSE,   clip = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   drop_shadow = FALSE,   shadow_params = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label simple feature objects in a location — layer_labelled","text":"data Data use labels (must sf object data frame can converted sf object using sfext::as_sf()) location Location label (specified data assumed conver whole location); geom geom use \"text\", \"label\", \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\" geom function (passed layer_fn). fn Function apply data creating labels; can used creation label_col. label_col Label column name mapping Aesthetic mapping, Default: NULL union TRUE, group label_col union geometry, Default: FALSE clip Character string describing part area clip remove. Options include c(\"top\", \"right\", \"bottom\", \"left\", \"topright\", \"bottomright\", \"bottomleft\", \"topleft\"). NULL, area clipped full edge can returned. dist Numeric. Distance use edge. Default NULL meters. Use negative values inside edge positive numbers outside edge. diag_ratio Alternate way define edge distance. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" drop_shadow TRUE, use ggfx::with_shadow() add drop shadow label layer shadow_params. Defaults FALSE. shadow_params Parameters passed ggfx::with_shadow() drop_shadow = TRUE. Defaults list(x_offset = 5, y_offset = 5, sigma = 0.5). ... Arguments passed layer_location_data smooth_params Optional. Logical list parameters passed smoothr::smooth(). TRUE, apply smoothr::smooth() location data using default parameters. smooth_params ignored data NULL (inheriting data ggplot). asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. pkg,package Name package search data. fileext,filetype File extension type use passing parameters sfext::read_sf_download() sfext::read_sf_pkg() (required extdata cached data). crop TRUE, x cropped y using sf::st_crop(). trim TRUE, x trimmed y st_trim(). crs Coordinate reference system return. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot().","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_labelled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Label simple feature objects in a location — layer_labelled","text":"Note: Unlike getdata package functions, fn applied data; subset data based location. function, dist unit used sfext::st_clip() (layer_location_data()) function also overrides label aesthetics hide colored letters otherwise appear using theme legend.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a location border into a ggplot2 map — layer_location","title":"Layer a location border into a ggplot2 map — layer_location","text":"Helper function make ggplot2 layer data returned get_location","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a location border into a ggplot2 map — layer_location","text":"","code":"layer_location(   mapping = ggplot2::aes(),   data = NULL,   type = NULL,   name = NULL,   id = NULL,   location = NULL,   name_col = \"name\",   id_col = \"id\",   index = NULL,   label = NULL,   label_geom = NULL,   label_col = name_col,   union = FALSE,   crs = getOption(\"maplayer.crs\", default = 3857),   color = \"gray40\",   linewidth = 0.5,   linetype = \"dashed\",   fill = NA,   alpha = 1,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   mask = FALSE,   neatline = FALSE,   smooth_params = NULL,   shadow_params = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a location border into a ggplot2 map — layer_location","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data Data location show. type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data(). index provided, character can also character string match name list. name Location name return. id Location id return. id coerced character numeric match class id_col type. location address, bounding box (bbox), simple feature (sf) object passed sf::st_filter(). valid address addresses geocoded tidygeocoder::geo(), converted simple feature object, used spatial filter. bbox objects converted using sfext::sf_bbox_to_sf(). Multiple addresses supported. name_col Column name type name values, Default: 'name' Required name provided. id_col Column name type id values, Default: 'id'. Required id provided. index Optional list used match type data, Default: NULL label label type (e.g. \"text\", \"label\") label_geom Optional character string function geom use labelling location layer. Passed geom parameter layer_labelled() label_col Column name id column text labels pass text geom. union TRUE, location geometry unioned sf::st_union() names combined single value. Default: FALSE. crs Coordinate reference system return; defaults NULL returns data using coordinate reference system provided type location. color Color location; defaults \"black\". linewidth Line width location; defaults 0.5. linetype Line type location; defaults \"dashed\". fill Fill location; defaults \"NA\". alpha mask alpha/transparency; defaults 0.5 dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. mask sf, sfc, bbox object define mask area. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer set_neatline(). logical TRUE, add neatline layer using data, crs additional parameters passed ... logical FALSE, return x . object layer_neatline(), add . smooth_params Optional. Logical list parameters passed smoothr::smooth(). TRUE, apply smoothr::smooth() location data using default parameters. smooth_params ignored data NULL (inheriting data ggplot). shadow_params Optional. Logical list parameters passed ggfx::with_shadow(). TRUE, apply ggfx::with_shadow() layer using default parameters. shadow_params ignored layer_fn provided. ... Additional parameters passed get_location data NULL.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a location border into a ggplot2 map — layer_location","text":"list ggplot2 geoms","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a layer showing a location and related context — layer_location_context","title":"Create a layer showing a location and related context — layer_location_context","text":"Create ggplot2 layer location provided context. function useful making inset locator maps combination make_inset_map function.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a layer showing a location and related context — layer_location_context","text":"","code":"layer_location_context(   data = NULL,   location = NULL,   fill = \"gray70\",   color = \"black\",   context = NULL,   context_params = list(fill = \"white\", color = \"black\", alpha = 1, ...),   crs = getOption(\"maplayer.crs\", default = 3857),   mid_layer = NULL,   neatline = TRUE,   basemap = FALSE,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a layer showing a location and related context — layer_location_context","text":"data, location data location can either sf object ggplot layer. Either data location required , data location provided, location ignored. data NULL location formula function, context data passed location function results used data location layer. fill, color Fill color fixed aesthetics location data. context sf object context area ggplot layer representing context. context_params list parameters context layer; defaults list(fill = \"white\", color = \"black\", alpha = 1, ...). crs Coordinate reference system return. mid_layer ggplot2 layer insert context layer location layer. Optional. neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer. logical TRUE, add neatline layer using data context layer color = NA bgcolor = \"none\". object layer_neatline(), add . basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). ... Additional parameters passed layer_location_data() data location sf object.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer location data into a ggplot2 map — layer_location_data","title":"Layer location data into a ggplot2 map — layer_location_data","text":"Helper function make ggplot2 layer data returned get_location_data(). text geoms, required aesthetic mapping set based name_col values passed mapping take precedence.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer location data into a ggplot2 map — layer_location_data","text":"","code":"layer_location_data(   mapping = NULL,   data = NULL,   geom = \"sf\",   location = NULL,   dist = getOption(\"maplayer.dist\"),   diag_ratio = getOption(\"maplayer.diag_ratio\"),   unit = getOption(\"maplayer.unit\", default = \"meter\"),   asp = getOption(\"maplayer.asp\"),   package = getOption(\"maplayer.data_package\"),   pkg = getOption(\"maplayer.data_package\"),   fileext = getOption(\"maplayer.data_fileext\", \"gpkg\"),   filetype = NULL,   fn = NULL,   layer_fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = getOption(\"maplayer.from_crs\", 4326),   crs = getOption(\"maplayer.crs\", 3857),   label_col = \"name\",   smooth_params = NULL,   shadow_params = NULL,   basemap = FALSE,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer location data into a ggplot2 map — layer_location_data","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data Character string (e.g. url, file path, name data package) spatial data sf, sfc, bbox  object geometry overlapping location. data NULL, unnamed parameters passed sfext::read_sf_ext() bbox based location. data NULL data.frame, url, file path, bbox, conversion sf object still always attempted sfext::as_sf(). geom character string indicating ggplot2 geom use, Default: 'sf'. Options include \"sf\" (ggplot2::geom_sf()), \"icon\" (layer_icon()), \"markers\" (layer_markers()), \"sf_text\" (ggplot2::geom_sf_text()), \"sf_label\" (ggplot2::geom_sf_label()). See details full list. location sf object. multiple areas provided, unioned single sf object using sf::st_union() dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. pkg, package Name package search data. fileext, filetype File extension type use passing parameters sfext::read_sf_download() sfext::read_sf_pkg() (required extdata cached data). fn Function apply data filtering location returning function. layer_fn ggplot2 geom custom function using lambda syntax. Use passing custom mapping functions layer_location_data beyond supported geom options. crop TRUE, x cropped y using sf::st_crop(). trim TRUE, x trimmed y st_trim(). from_crs Coordinate reference system used match location CRS source data. crs Coordinate reference system return. label_col Column name id column text labels pass text geom. smooth_params Optional. Logical list parameters passed smoothr::smooth(). TRUE, apply smoothr::smooth() location data using default parameters. smooth_params ignored data NULL (inheriting data ggplot). shadow_params Optional. Logical list parameters passed ggfx::with_shadow(). TRUE, apply ggfx::with_shadow() layer using default parameters. shadow_params ignored layer_fn provided. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). ... Additional parameters passed selected geom layer_fn","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_data.html","id":"using-the-geom-parameter","dir":"Reference","previous_headings":"","what":"Using the geom parameter","title":"Layer location data into a ggplot2 map — layer_location_data","text":"function provides convenient option filtering data location calling different layer function ggplot2, maplayer, different package. Options geom parameter ggplot2: \"sf\" (ggplot2::geom_sf - default) \"sf_text\" \"text (ggplot2::geom_sf_text) \"sf_label\" \"label (ggplot2::geom_sf_label) Options geom parameter included package include: \"location\" (layer_location) \"context\" \"location_context\" (layer_location_context) \"icon\" (layer_icon), \"mapbox\" (layer_mapbox) \"markers\" (layer_markers) \"numbers\" \"numbered\" (layer_numbers) \"mark\" \"marked\" (layer_marked) Options geom parameter suggested packages include: \"textsf\" (geomtextpath::geom_textsf) \"labelsf\" (geomtextpath::geom_labelsf) \"text_repel\" (ggrepel::geom_text_repel) \"label_repel\" (ggrepel::geom_label_repel) \"sf_pattern\" \"pattern\" (ggpattern::geom_sf_pattern) stat = \"sf_coordinates\" automatically added parameters ggrepel functions. label = .data[[name_col]]  automatically added provided geoms label required parameter.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_location_data.html","id":"using-the-layer-fn-parameter","dir":"Reference","previous_headings":"","what":"Using the layer_fn parameter","title":"Layer location data into a ggplot2 map — layer_location_data","text":"layer_fn can purrr-style lamba function (converted rlang::as_function()) function.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_mapbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Use mapboxapi to make a Mapbox static map layer — layer_mapbox","title":"Use mapboxapi to make a Mapbox static map layer — layer_mapbox","text":"Use mapboxapi make Mapbox static map layer","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_mapbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use mapboxapi to make a Mapbox static map layer — layer_mapbox","text":"","code":"layer_mapbox(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   style_url = \"mapbox://styles/mapbox/satellite-streets-v11\",   style_id = NULL,   username = NULL,   basemap = FALSE,   scale = 0.75,   scaling_factor = \"1x\",   attribution = TRUE,   logo = TRUE,   access_token = NULL,   neatline = TRUE,   color = \"black\",   bgcolor = \"white\",   linewidth = 0.5,   linetype = \"solid\",   expand = TRUE,   hide_grid = TRUE,   label_axes = \"----\",   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_mapbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use mapboxapi to make a Mapbox static map layer — layer_mapbox","text":"data sf, sfc, bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. style_url Map style url used fill style_id username parameters, Default: \"mapbox://styles/mapbox/satellite-streets-v11\" style_id style ID (required style_url NULL). username Mapbox username (required style_url = NULL). basemap FALSE, create standalone layer; TRUE, layer preceded ggplot2::ggplot() allow use basemap, Default: TRUE scale ratio scale output image; scale = 1 return largest possible image. defaults 0.5 scaling_factor scaling factor tiles; either \"1x\" (default) \"2x\" attribution Controls whether attribution image. Defaults TRUE. FALSE, watermarked attribution removed image. still legal responsibility attribute maps use OpenStreetMap data, includes maps Mapbox. specify attribution = FALSE, legally required include proper attribution elsewhere webpage document. logo Controls whether Mapbox logo image. Defaults TRUE. access_token Mapbox access token; can set mb_access_token. neatline TRUE, add neatline matching provided data, Default: TRUE color Color panel border, Default: 'black' bgcolor Fill color panel background; defaults \"white\". \"none\", panel background set ggplot2::element_blank() linewidth Line width panel border, Default: 0.5 linetype Line type panel border, Default: 'solid' expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. hide_grid TRUE, hide grid lines. Default: TRUE label_axes description axes label passed ggplot2::coord_sf(); defaults '----' hides axes labels. ... Additional parameter passed mapboxapi::layer_static_mapbox","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggforce to create an annotation layer using simple feature data — layer_marked","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"Use ggforce::geom_mark_rect(), ggforce::geom_mark_circle(), ggforce::geom_mark_ellipse(), ggforce::geom_mark_hull() annotate simple feature objects. function modifies geometry sets stat \"st_coordinates\" make easy use annotation geoms simple feature objects.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"","code":"layer_marked(   data,   fn = NULL,   mapping = NULL,   label_col = NULL,   desc_col = NULL,   geom = NULL,   center = FALSE,   font_family = NULL,   font_face = c(\"bold\", \"plain\"),   font_color = NULL,   expand = ggplot2::unit(5, \"mm\"),   radius = expand,   stat = \"sf_coordinates\",   drop_shadow = FALSE,   shadow_params = list(x_offset = 5, y_offset = 5, sigma = 0.5, ...),   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"data sf, sfc, bbox object can converted sfext::as_sf fn Function apply data passing geom, typically predicate filter define area annotation. filter can also passed ggforce functions using filter aesthetic. Default: NULL mapping Aesthetic mapping pass geom, Default: NULL label_col Label column name desc_col Column name use description. Defaults NULL. geom geom use layer (options include \"rect\", \"circle\", \"ellipse\", \"hull\"), Default: NULL center FALSE, use sfext::st_cast_ext MULTIPOLYGON POLYGON data POINT; TRUE, use sfext::st_center use centroid feature geometry. Defaults FALSE. font_family, font_face, font_color Parameters passed label.family, label.fontface, label.colour. NULL, values set match ggplot2::geom_label defaults. Defaults NULL. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. stat stat pass ggforce function; defaults \"sf_coordinates\" drop_shadow TRUE, use ggfx::with_shadow() add drop shadow label layer shadow_params. Defaults FALSE. shadow_params Parameters passed ggfx::with_shadow() drop_shadow = TRUE. Defaults list(x_offset = 5, y_offset = 5, sigma = 0.5). ... Additional parameters passed ggforce::geom_mark_rect(), ggforce::geom_mark_circle(), ggforce::geom_mark_ellipse(), ggforce::geom_mark_hull() ggplot2::layer()","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":"geometry-conversion-for-multipolygon-or-polygon-data","dir":"Reference","previous_headings":"","what":"Geometry conversion for MULTIPOLYGON or POLYGON data","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"cast FALSE data geometry type MULTIPOLYGON POLYGON, annotation uses centroid annotation geometry. cast TRUE, data converted POINT geometry using sfext::st_cast_ext() modified geometry passed selected geom.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":"setting-label-and-description","dir":"Reference","previous_headings":"","what":"Setting label and description","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"Labels descriptions can included aesthetic mapping layer consistent standard documented approaches four functions. Labels descriptions also can set two non-standard ways: Setting label_col /desc_col character strings column names labels /descriptions Setting label_col /desc_col value label/description first approach used, label_col desc_col can also can created modified function provided fn parameter. Otherwise, columns must present data work. second approach used, length order vector provided label_col /desc_col must match length order data (fn applied).","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_marked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use ggforce to create an annotation layer using simple feature data — layer_marked","text":"","code":"if (FALSE) { if (interactive()) {   # Mark the 12th Council District on a Baltimore neighborhood basemap   ggplot::ggplot() +     layer_location_data(       data = \"neighborhoods\",       package = \"mapbaltimore\"     ) +     layer_marked(       data = getdata::get_location(         type = \"council district\",         name = \"District 12\",         package = \"mapbaltimore\"       ),       geom = \"hull\",       color = \"red\",       size = 1.5     ) } }"},{"path":"https://elipousson.github.io/maplayer/reference/layer_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","title":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","text":"make TRUE, groupname_col, group_meta, crs, fn passed make_markers.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","text":"","code":"layer_markers(   data,   mapping = NULL,   geom = \"sf\",   make = FALSE,   groupname_col = NULL,   group_meta = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   number = FALSE,   num_by_group = FALSE,   num_style = NULL,   num_start = 1,   suffix = NULL,   sort = \"dist_xmin_ymax\",   desc = FALSE,   fn = NULL,   ... )  layer_numbers(   data,   mapping = NULL,   geom = \"label\",   make = FALSE,   groupname_col = NULL,   style = \"roundrect\",   size = 5,   sort = \"dist_xmin_ymax\",   num_by_group = FALSE,   num_style = NULL,   num_start = 1,   suffix = NULL,   desc = FALSE,   fn = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   label.size = 0,   label.padding = ggplot2::unit(size/10, \"lines\"),   label.r = label.padding * 1.5,   hjust = 0.5,   vjust = 0.5,   ... )  make_markers(   data,   groupname_col = NULL,   group_meta = NULL,   join = sf::st_intersects,   geo = FALSE,   coords = c(\"lon\", \"lat\"),   address = \"address\",   point = TRUE,   crs = NULL,   fn = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","text":"data Character string (e.g. url, file path, name data package) spatial data sf, sfc, bbox  object geometry overlapping location. data NULL, unnamed parameters passed sfext::read_sf_ext() bbox based location. data NULL data.frame, url, file path, bbox, conversion sf object still always attempted sfext::as_sf(). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. geom character string indicating ggplot2 geom use, Default: 'sf'. Options include \"sf\" (ggplot2::geom_sf()), \"icon\" (layer_icon()), \"markers\" (layer_markers()), \"sf_text\" (ggplot2::geom_sf_text()), \"sf_label\" (ggplot2::geom_sf_label()). See details full list. make TRUE, pass data make_markers. groupname_col Group column name, used join group metadata group_meta non-spatial data frame; Default: NULL group_meta Group metadata data frame sf object intersect markers (using join function); Default: NULL crs Coordinate reference system markers, Default: NULL number TRUE, number markers using layer_markers() (currently supported) num_by_group TRUE, numbers added group based groupname_col. num_style Style enumeration, either \"arabic\", \"alph\", \"Alph\", \"roman\", \"Roman\". num_start Starting number; defaults 1. suffix Character appended \"number\" column. (e.g. \".\" \"1.\" \":\" \"1:\"). Can also character vector length number column. sort Sort column name, Default: \"dist_xmin_ymax\". desc TRUE, sort descending; default FALSE. fn Function apply data results; gives warning data grouped; Default: NULL ... Additional parameters passed get_location_data() using make = TRUE pass data make_markers style Marker style; defaults NULL layer_markers() (supports \"facet\"); defaults \"roundrect\" layer_markers() numbered = TRUE (default supported option present). size Marker size, Default: 5 label.size Size label border, mm. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. hjust, vjust Horizontal vertical justification. join Spatial relation function combine data group_meta, passed sf::st_join(). Defaults sf::st_intersects(). geo FALSE, pass data getdata::get_location_data() geo = TRUE parameter. coords Coordinate columns input data.frame output sf object (geometry 'centroid' 'point') Default: c(\"lon\", \"lat\"). address Address column name passed tidygeocoder::geocode() tidygeocoder::geo point TRUE data POINT MULTIPOINT geometry, convert POINT data using sf::st_centroid().","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","text":"ggplot2 layers","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot2 layer with map markers or numbered markers — layer_markers","text":"","code":"nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\")) nc <- sf::st_transform(nc, 3857)  basemap <-   ggplot() +   layer_location_data(     data = nc,     fill = NA   )  basemap +   layer_markers(     data = nc[1:10],     mapping = aes(size = AREA),     make = TRUE   )   large_nc <-   getdata::get_location_data(     data = nc,     fn = ~ dplyr::filter(.x, AREA > 0.2)   )  large_nc$number <- 1 large_nc$dist <- 2  basemap +   layer_numbers(     data = large_nc,     mapping = aes(fill = NAME),     sort = \"dist_xmax_ymin\",     num_style = \"Roman\",     geom = \"label\",     size = 3     ) +   guides(fill = \"none\")"},{"path":"https://elipousson.github.io/maplayer/reference/layer_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mask layer based on a simple feature object — layer_mask","title":"Create a mask layer based on a simple feature object — layer_mask","text":"Returns mask area areas simple feature object. neatline = TRUE works layer data passed directly; inherited.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mask layer based on a simple feature object — layer_mask","text":"","code":"layer_mask(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   fill = \"white\",   color = NA,   alpha = 0.5,   mask = NULL,   neatline = FALSE,   expand = TRUE,   ... )  set_mask(x = NULL, mask = TRUE, data = NULL, crs = NULL, ...)"},{"path":"https://elipousson.github.io/maplayer/reference/layer_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mask layer based on a simple feature object — layer_mask","text":"data sf, sfc, bbox object. dist, diag_ratio, /asp provided, data adjusted set boundaries mask. data provided, mask required. data NA, mask continuous otherwise data erased mask area. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return; defaults NULL maintains crs input object. fill mask fill color; defaults \"white\" color mask edge color; defaults NA alpha mask alpha/transparency; defaults 0.5 mask sf, sfc, bbox object define mask area. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer set_neatline(). logical TRUE, add neatline layer using data, crs additional parameters passed ... logical FALSE, return x . object layer_neatline(), add . expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. ... Additional parameters pass ggplot2::geom_sf() x sf, sfc, bbox, sfg, Raster, Spatial, Extent, numeric, character object (place name passed osmdata::getbb()). See as_bbox() details.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mask layer based on a simple feature object — layer_mask","text":"ggplot2::geom_sf() function.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_neatline.html","id":null,"dir":"Reference","previous_headings":"","what":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","title":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","text":"Set limits map bounding box feature using ggplot2::coord_sf(). Optionally, adjust x size applying buffer /adjust aspect ratio limiting bounding box match set aspect ratio.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_neatline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","text":"","code":"layer_neatline(   data = NULL,   dist = getOption(\"maplayer.dist\"),   diag_ratio = getOption(\"maplayer.diag_ratio\"),   unit = getOption(\"maplayer.unit\", default = \"meter\"),   asp = getOption(\"maplayer.asp\"),   crs = getOption(\"maplayer.crs\"),   nudge = getOption(\"maplayer.nudge\"),   color = \"black\",   linewidth = 0.5,   linetype = \"solid\",   bgcolor = \"white\",   expand = TRUE,   hide_grid = TRUE,   label_axes = \"----\",   axis.title = NULL,   axis.text = NULL,   axis.ticks = NULL,   axis.ticks.length = ggplot2::unit(x = 0, units = \"mm\"),   axis.line = NULL,   panel.grid = NULL,   panel.grid.major = NULL,   panel.grid.minor = NULL,   panel.border = NULL,   panel.background = NULL,   plot.background = NULL,   plot.margin = NULL,   default_plot_margin = ggplot2::margin(1, 1, 1, 1),   xlim = NULL,   ylim = NULL,   ... )  set_neatline(x = NULL, neatline = TRUE, data = NULL, crs = NULL, ...)"},{"path":"https://elipousson.github.io/maplayer/reference/layer_neatline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","text":"data sf, sfc, bbox class object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs coordinate reference system (CRS) data projected plotting. specified, use CRS defined first sf layer plot. nudge Passed parameter st_nudge() NULL. numeric vector, sf object, object can converted simple feature collection as_sfc().. color Color panel border, Default: 'black' linewidth Line width panel border, Default: 0.5 linetype Line type panel border, Default: 'solid' bgcolor Fill color panel background; defaults \"white\". \"none\", panel background set ggplot2::element_blank() expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. hide_grid TRUE, hide grid lines. Default: TRUE label_axes description axes label passed ggplot2::coord_sf(); defaults '----' hides axes labels. axis.title, axis.text, axis.ticks, axis.ticks.length, axis.line Theme elements passed label_axes anything \"----\". panel.grid, panel.grid.major, panel.grid.minor Passed hide_grid FALSE. panel.border, panel.background, plot.background, plot.margin panel.border used NULL ggplot2::element_blank() NULL unless color NA \"none\". panel.background plot.background used ggplot2::element_blank() bg color NA \"none\". plot.margin set ggplot2::margin(1, 1, 1, 1) NULL ggplot2::margin(0, 0, 0, 0) expand FALSE. default_plot_margin Defaults ggplot2::margin(1, 1, 1, 1). Ignored expand = FALSE xlim, ylim Limits x y axes. limits specified units default CRS. default, means projected coordinates (default_crs = NULL). limit specifications translate exact region shown plot can confusing non-linear rotated coordinate systems used default crs. First, different methods can preferable different conditions. See parameter lims_method details. Second, specifying limits along one direction can affect automatically generated limits along direction. Therefore, best always specify limits x y. Third, specifying limits via position scales xlim()/ylim() strongly discouraged, can result data points dropped plot even though visible final plot region. ... Additional parameters passed ggplot2::coord_sf(). x set_neatline(), ggplot class object, ggproto class object list ggproto objects combine neatline layer. neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer set_neatline(). logical TRUE, add neatline layer using data, crs additional parameters passed ... logical FALSE, return x . object layer_neatline(), add .","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_neatline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","text":"List ggplot2::coord_sf ggplot2::theme calls.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/layer_neatline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set map limits to a bounding box with a buffer and set aspect ratio — layer_neatline","text":"","code":"library(ggplot2)  nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))  ggplot() +   layer_location_data(data = nc) +   layer_neatline(data = nc[1, ], asp = 1, color = \"red\", linewidth = 1, linetype = \"dashed\")   ggplot() +   layer_location_data(data = nc) +   layer_neatline(data = nc[1, ], dist = 20, unit = \"mi\", color = \"none\")"},{"path":"https://elipousson.github.io/maplayer/reference/layer_repel.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggrepel to create text annotations based on simple features — layer_repel","title":"Use ggrepel to create text annotations based on simple features — layer_repel","text":"Use ggrepel::geom_label_repel ggrepel::geom_text_repel ggplot2::stat_sf_coordinates() create layer textual annotations repelled simple feature locations.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_repel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggrepel to create text annotations based on simple features — layer_repel","text":"","code":"layer_repel(   mapping = aes(),   data = NULL,   label_col = \"name\",   geom = c(\"text\", \"label\"),   location_lims = NULL,   xlim = c(NA, NA),   ylim = c(NA, NA),   ... )  geom_sf_label_repel(mapping = aes(), data = NULL, label_col = \"name\", ...)  geom_sf_text_repel(mapping = aes(), data = NULL, label_col = \"name\", ...)"},{"path":"https://elipousson.github.io/maplayer/reference/layer_repel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggrepel to create text annotations based on simple features — layer_repel","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. need supply mapping mapping defined plot. data data frame. specified, overrides default data frame defined top level plot. label_col Column name use label aesthetic mapping. Optional label provided mapping; required otherwise. geom Character vector geom use, \"text\" ggrepel::geom_text_repel() \"label\" ggrepel::geom_label_repel(). location_lims sf, sfc, bbox object use setting xlim ylim values xlim ylim value area provided. Using parameter constrains labels bounding box location_lims. xlim, ylim Limits x y axes. Text labels constrained limits. default, text labels constrained entire plot area. ... Arguments passed ggrepel::geom_label_repel position Position adjustment, either string, result call position adjustment function. parse TRUE, labels parsed expressions displayed described ?plotmath box.padding Amount padding around bounding box, unit number. Defaults 0.25. (Default unit lines, units can specified passing unit(x, \"units\")). label.padding Amount padding around label, unit number. Defaults 0.25. (Default unit lines, units can specified passing unit(x, \"units\")). point.padding Amount padding around labeled point, unit number. Defaults 0. (Default unit lines, units can specified passing unit(x, \"units\")). label.r Radius rounded corners, unit number. Defaults 0.15. (Default unit lines, units can specified passing unit(x, \"units\")). label.size Size label border, mm. min.segment.length Skip drawing segments shorter , unit number. Defaults 0.5. (Default unit lines, units can specified passing unit(x, \"units\")). arrow specification arrow heads, created arrow force Force repulsion overlapping text labels. Defaults 1. force_pull Force attraction text label corresponding data point. Defaults 1. max.time Maximum number seconds try resolve overlaps. Defaults 0.5. max.iter Maximum number iterations try resolve overlaps. Defaults 10000. max.overlaps Exclude text labels overlap many things. Defaults 10. nudge_x,nudge_y Horizontal vertical adjustments nudge starting position text label. units nudge_x nudge_y data units x-axis y-axis. xlim,ylim Limits x y axes. Text labels constrained limits. default, text labels constrained entire plot area. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. direction \"\", \"x\", \"y\" -- direction adjust position labels seed Random seed passed set.seed. Defaults NA, means set.seed called. verbose TRUE, diagnostics repel algorithm printed inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"Uses layer_neatline, sfext::standard_scales, sfext::convert_dist_scale.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/layer_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"","code":"layer_scaled(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = getOption(\"maplayer.crs\", default = 3857),   scale = NULL,   paper = NULL,   orientation = NULL,   clip = FALSE )"},{"path":"https://elipousson.github.io/maplayer/reference/layer_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"data sf, sfc, bbox class object. dist distance convert. paper provided, dist optional paper width height used dist. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return; defaults NULL maintains crs input object. scale Scale name standard_scales[[\"scale\"]]. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. clip TRUE, create scaled layer even data cut ; defaults FALSE.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a set of ggplot2 maps to an atlas — make_atlas","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"make_atlas() wrapper papersize::page_layout() papersize::map_ggsave_ext() intent taking list maps set patchwork plots optionally save plots file. function similar papersize::make_contact_sheets().","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"","code":"make_atlas(   plots,   dims = NULL,   ncol = NULL,   nrow = NULL,   page = \"letter\",   orientation = \"portrait\",   save = FALSE,   filename = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"plots list ggplot2 maps assemble set sheet maps atlas format. dims Optional. Plot dimensions. Ignored ncol nrow supplied. Otherwise, NULL (default), dims inferred based dimensions first plot plots. ncol, nrow dimensions grid create.  NULL, dims used dims determined based plot dimensions. page Used get_page_dims(), page either character vector passed name parameter get_page_size(), data.frame column names matching cols parameter, length 2 numeric vector page width height. orientation Page orientation, Default: NULL. Supported options \"portrait\", \"landscape\", \"square\". save TRUE, save atlas plots files using papersize::map_ggsave_ext() Default: FALSE filename File name create disk. ... Arguments passed papersize::map_ggsave_ext name Plot name, used create filename (filename NULL) using filenamr::make_filename() label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. label ignored name NULL name includes file extension. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. device Device use. Can either device function (e.g. png), one \"eps\", \"ps\", \"tex\" (pictex), \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\" (windows ). fileext File type extension. Optional filename path include file extension. filetype File type (used fileext NULL). path Path directory save plot : path filename combined create fully qualified file name. Defaults working directory. overwrite TRUE (default), overwrite existing file name ask overwrite ask = TRUE. Passed filenamr::check_file_overwrite(). single_file,onefile TRUE, use gridExtra::arrangeGrob() create arrangelist class object ggplot2::ggsave() can save single multi-page file. Note: work plots modified patchwork including inset maps created maplayer::layer_inset() function.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"OUTPUT_DESCRIPTION","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"DETAILS","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_atlas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a set of ggplot2 maps to an atlas — make_atlas","text":"","code":"nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))  plots <- lapply(   dplyr::nest_by(nc, .by = NAME)[[\"data\"]][1:4],   function(x) {     make_location_map(       basemap = ggplot(),       layer = layer_location(         data = x,         fill = \"yellow\",         alpha = 0.5       ),       bg_layer = layer_location_data(         data = nc,         location = x,         asp = 8.5 / 5.5,         crop = FALSE       ),       neatline = layer_neatline(data = x, asp = 8.5 / 5.5),       addon = labs_ext(caption = x$NAME)     )   } )  make_atlas(   plots = plots,   page = \"letter\",   nrow = 2,   ncol = 1,   save = FALSE ) #> ℹ Creating sheet map plots #> ✔ Creating sheet map plots [28ms] #>  #> $`1`  #>  #> $`2`  #>"},{"path":"https://elipousson.github.io/maplayer/reference/make_location_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a ggplot map using layer_location_data() — make_location_map","title":"Make a ggplot map using layer_location_data() — make_location_map","text":"Location used data parameter layer_location_data function primarily appropriate layer_mapbox (geom = \"mapbox\").","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_location_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a ggplot map using layer_location_data() — make_location_map","text":"","code":"make_location_map(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   data = NULL,   crs = NULL,   paper = NULL,   width = NULL,   height = NULL,   units = \"in\",   orientation = NULL,   geom = \"sf\",   basemap = TRUE,   bg_layer = NULL,   layer = NULL,   fg_layer = NULL,   addon = NULL,   neatline = FALSE,   labs_ext_params = list(...),   save = FALSE,   ggsave_params = list(dpi = 300, ...),   ...,   env = caller_env(),   call = caller_env() )  make_social_map(   location,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = 3857,   image = NULL,   platform = NULL,   format = NULL,   orientation = NULL,   basemap = TRUE,   geom = \"mapbox\",   save = FALSE,   ggsave_params = list(fileext = \"jpeg\", dpi = 72, ...),   ... )  make_image_map(   image_path,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   data = NULL,   crs = 3857,   paper = \"Letter\",   orientation = NULL,   geom = \"mapbox\",   style_url = NULL,   basemap = TRUE,   bg_layer = NULL,   fg_layer = NULL,   save = FALSE,   ggsave_params = list(dpi = 300, ...),   image_geom = \"label\",   groupname_col = NULL,   group_meta = NULL,   number = FALSE,   num_by_group = FALSE,   num_style = NULL,   num_start = 1,   suffix = NULL,   sort = \"dist_xmin_ymax\",   desc = FALSE,   ... )  make_layer_map(   bg_layer = NULL,   layer = NULL,   fg_layer = NULL,   addon = NULL,   basemap = NULL,   neatline = NULL,   labs_ext_params = NULL,   save = FALSE,   ggsave_params = list(width = 5, height = 4, unit = \"in\", dpi = 300),   env = caller_env(),   call = caller_env() )"},{"path":"https://elipousson.github.io/maplayer/reference/make_location_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a ggplot map using layer_location_data() — make_location_map","text":"location sf object passed layer_location_data() data layer NULL. location ignored layer provided. data NULL, location passed data facilitate using function geom = \"mapbox\" data used define map area. Defaults NULL dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. data Character string (e.g. url, file path, name data package) spatial data sf, sfc, bbox  object geometry overlapping location. data NULL, unnamed parameters passed sfext::read_sf_ext() bbox based location. data NULL data.frame, url, file path, bbox, conversion sf object still always attempted sfext::as_sf(). crs Coordinate reference system bounding box return; defaults NULL maintains crs input object. paper Paper matching name paper_sizes (e.g. \"letter\"). case sensitive. width Page width \"\", \"px\" \"mm\" units. Default: NULL height Page height \"\", \"px\" \"mm\" units. Default: NULL units Units convert page dimensions using convert_unit_type(). orientation Page orientation, Default: NULL. Supported options \"portrait\", \"landscape\", \"square\". geom character string indicating ggplot2 geom use, Default: 'sf'. Options include \"sf\" (ggplot2::geom_sf()), \"icon\" (layer_icon()), \"markers\" (layer_markers()), \"sf_text\" (ggplot2::geom_sf_text()), \"sf_label\" (ggplot2::geom_sf_label()). See details full list. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). bg_layer, fg_layer, addon ggplot2 layer list ggproto objects (e.g. scales, labels, etc.) add background foreground primary map layer defined \"geom\" parameters. geom creates opaque layer layer opaque layer (e.g. layer produced layer_mapbox()) covers full map extent, bg_layer visible. layer ggplot2 layer list ggproto objects. layer provided, parameters passed layer_location_data() (including data, location, dist, diag_ratio, unit, asp, crs, geom) ignored. case, function simply stacks bg_layer, layer, fg_layer objects applies basemap neatline (using set_basemap() set_neatline() helper functions.) neatline logical object, CoordSf object, list containing CoordSf object (typically layer_neatline()) added layer set_neatline(). logical TRUE, add neatline layer using data, crs additional parameters passed ... logical FALSE, return x . object layer_neatline(), add . labs_ext_params Optional parameters passed labs_ext(). save TRUE, save file ggsave_ext using ggsave_params. Defaults FALSE. ggsave_params List parameters passed papersize::ggsave_ext(). ... Additional parameters passed layer_location_data() make_location_map() make_social_map() layer_markers() make_image_map(). env Environment evaluation labs_ext() labs_ext_params supplied. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. image Image name passed name parameter get_social_size(). platform Social media platform, \"Instagram\", \"Facebook\", \"Twitter\", Default: NULL format Image format, \"post\", \"story\", \"cover\", Default: NULL image_path path location images make_image_map() style_url Mapbox style url; defaults NULL. image_geom make_image_map(), geom use layer_markers mark location images (based EXIF metadata). groupname_col Group column name, used join group metadata group_meta non-spatial data frame; Default: NULL group_meta Group metadata data frame sf object intersect markers (using join function); Default: NULL number TRUE, number markers using layer_markers() (currently supported) num_by_group TRUE, numbers added group based groupname_col. num_style Style enumeration, either \"arabic\", \"alph\", \"Alph\", \"roman\", \"Roman\". num_start Starting number; defaults 1. suffix Character appended \"number\" column. (e.g. \".\" \"1.\" \":\" \"1:\"). Can also character vector length number column. sort Sort column name, Default: \"dist_xmin_ymax\". desc TRUE, sort descending; default FALSE.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_location_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a ggplot map using layer_location_data() — make_location_map","text":"Using make_image_map(): make_image_map() wraps sfext::read_sf_exif() make_location_map(). designed making simple maps photos combination reference tables.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_location_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a ggplot map using layer_location_data() — make_location_map","text":"","code":"nc <- sf::read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))  make_location_map(   location = nc )   name <- \"North Carolina\"  make_location_map(   location = nc,   labs_ext_params = list(     title = \"Map of {name}\"   ) ) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'name' not found  make_location_map(   data = nc,   location = nc[2, ],   dist = 2,   unit = \"mi\",   crop = FALSE,   addon = ggplot2::theme_minimal(),   labs_ext_params = list(     title = \"Map of {nc[2, ]$NAME} County\"   ) ) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'nc' not found  make_location_map(   basemap = ggplot(data = nc[2,]),   fg_layer = geom_sf_text(aes(label = NAME)),   data = nc,   location = nc[2, ],   mapping = aes(fill = NAME),   addon = guides(fill = \"none\"),   dist = 2,   unit = \"mi\",   crop = FALSE,   neatline = TRUE,   labs_ext_params = list(     title = \"Map of {nc[2, ]$NAME} and surrounding {name} counties\"   ) ) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'nc' not found"},{"path":"https://elipousson.github.io/maplayer/reference/make_mapbox_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a map using layer_mapbox — make_mapbox_map","title":"Make a map using layer_mapbox — make_mapbox_map","text":"Wraps make_layer_map() passes layer created layer_mapbox() basemap neatline parameters layer_neatline() (using data Mapbox background layer). neatline parameters used neatline NULL.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/make_mapbox_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a map using layer_mapbox — make_mapbox_map","text":"","code":"make_mapbox_map(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   style_url = \"mapbox://styles/mapbox/satellite-streets-v11\",   style_id = NULL,   username = NULL,   basemap = TRUE,   scale = 0.75,   scaling_factor = \"1x\",   attribution = TRUE,   logo = TRUE,   access_token = NULL,   neatline = NULL,   color = \"black\",   bgcolor = \"white\",   linewidth = 0.5,   linetype = \"solid\",   expand = TRUE,   hide_grid = TRUE,   label_axes = \"----\",   width = NULL,   height = NULL,   units = NULL,   orientation = NULL,   location = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/make_mapbox_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a map using layer_mapbox — make_mapbox_map","text":"data sf, sfc, bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. style_url Map style url used fill style_id username parameters, Default: \"mapbox://styles/mapbox/satellite-streets-v11\" style_id style ID (required style_url NULL). username Mapbox username (required style_url = NULL). basemap FALSE, create standalone layer; TRUE, layer preceded ggplot2::ggplot() allow use basemap, Default: TRUE scale ratio scale output image; scale = 1 return largest possible image. defaults 0.5 scaling_factor scaling factor tiles; either \"1x\" (default) \"2x\" attribution Controls whether attribution image. Defaults TRUE. FALSE, watermarked attribution removed image. still legal responsibility attribute maps use OpenStreetMap data, includes maps Mapbox. specify attribution = FALSE, legally required include proper attribution elsewhere webpage document. logo Controls whether Mapbox logo image. Defaults TRUE. access_token Mapbox access token; can set mb_access_token. neatline TRUE, add neatline matching provided data, Default: TRUE color Color panel border, Default: 'black' bgcolor Fill color panel background; defaults \"white\". \"none\", panel background set ggplot2::element_blank() linewidth Line width panel border, Default: 0.5 linetype Line type panel border, Default: 'solid' expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. hide_grid TRUE, hide grid lines. Default: TRUE label_axes description axes label passed ggplot2::coord_sf(); defaults '----' hides axes labels. width, height Page width height. required, asp NULL. Default NULL. units Units width height. Required unless units included dims. Passed as_unit_type() validate. orientation Page orientation, Default: NULL. Supported options \"portrait\", \"landscape\", \"square\". width height suggest portrait orientation orientation = \"landscape\", dimensions reversed page dimensions match provided orientation. location location provided data NULL, location used place data. ... Arguments passed make_layer_map labs_ext_params Optional parameters passed labs_ext(). ggsave_params List parameters passed papersize::ggsave_ext(). layer ggplot2 layer list ggproto objects. layer provided, parameters passed layer_location_data() (including data, location, dist, diag_ratio, unit, asp, crs, geom) ignored. case, function simply stacks bg_layer, layer, fg_layer objects applies basemap neatline (using set_basemap() set_neatline() helper functions.) bg_layer,fg_layer,addon ggplot2 layer list ggproto objects (e.g. scales, labels, etc.) add background foreground primary map layer defined \"geom\" parameters. geom creates opaque layer layer opaque layer (e.g. layer produced layer_mapbox()) covers full map extent, bg_layer visible. save TRUE, save file ggsave_ext using ggsave_params. Defaults FALSE. env Environment evaluation labs_ext() labs_ext_params supplied. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/map_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map icons — map_icons","title":"Map icons — map_icons","text":"index map icons four sources: mapbox/maki ideditor/temaki manifestinteractive/weather-underground-icons openstreetmap/map-icons openstreetmap/lane-icons Esri/calcite-point-symbols NPMap Symbol Library icon sources use open licenses. Maki, Temaki, OSM lane icons use CC0 license. Weather Underground Icons use MIT license. OSM map icons use unspecified PD style license. Calcite icons available Esri Master License Agreement (MLA). NPMap Symbol Library created National Park Service assumed Public Domain work U.S.. index last updated August 25, 2023 may include icons added since date.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/map_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map icons — map_icons","text":"","code":"map_icons"},{"path":"https://elipousson.github.io/maplayer/reference/map_icons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map icons — map_icons","text":"tibble 5,015 rows 5 variables: name Icon name url Icon URL GitHub repo style Icon style (blank applicable) size Icon width/height (pixels) repo GitHub repository icon collection","code":""},{"path":"https://elipousson.github.io/maplayer/reference/map_icons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map icons — map_icons","text":"name column unique px source may required using layer_icon().","code":""},{"path":"https://elipousson.github.io/maplayer/reference/maplayer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"maplayer: Make Map Layers With ggplot2 — maplayer-package","title":"maplayer: Make Map Layers With ggplot2 — maplayer-package","text":"Make map-making ggplot2 sf convenient layers subset location.","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/maplayer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"maplayer: Make Map Layers With ggplot2 — maplayer-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/maplayer/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 aes, geom_sf, geom_sf_label, geom_sf_text, ggplot, guides, last_plot, margin papersize ggsave_ext, ggsave_social, map_ggsave_ext","code":""},{"path":"https://elipousson.github.io/maplayer/reference/scale_group_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create discrete fill and color scales for grouped data — scale_group_data","title":"Create discrete fill and color scales for grouped data — scale_group_data","text":"Designed use layer_group_data. group_data_pal generates palettes passed ggplot2::scale_fill_manual ggplot2::scale_color_manual.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/scale_group_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create discrete fill and color scales for grouped data — scale_group_data","text":"","code":"scale_group_data(   ...,   data,   col = NULL,   palette = NULL,   n = NULL,   direction = 1,   na.value = \"grey50\",   drop = FALSE,   limits = NULL,   aesthetics = \"fill\" )  group_data_pal(   data,   palette = NULL,   col = NULL,   n = NULL,   direction = 1,   pkg = NULL )  get_group_data_pal_scale(data, col = NULL, palette = NULL, ...)"},{"path":"https://elipousson.github.io/maplayer/reference/scale_group_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create discrete fill and color scales for grouped data — scale_group_data","text":"... Arguments passed discrete_scale palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. scale_name name scale used error messages associated scale. name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. guide function used create guide name. See guides() information. super super class use constructed scale data Data use generating scale palette. col Grouping column found data use generating scale palette; defaults NULL. palette Name palette string. Must form packagename::palettename. n Number colors desired. omitted, returns complete palette. direction Either 1 -1. -1 palette reversed. na.value aesthetic value use missing (NA) values drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). pkg Package name use prefix palette name selecting palette paletteer::paletteer_d()","code":""},{"path":[]},{"path":"https://elipousson.github.io/maplayer/reference/set_basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base map by adding the object — set_basemap","title":"Create a base map by adding the object — set_basemap","text":"Add basemap ggplot2 layer.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/set_basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base map by adding the object — set_basemap","text":"","code":"set_basemap(x, basemap = FALSE, call = caller_env())  make_basemap(x, basemap = FALSE, call = caller_env())"},{"path":"https://elipousson.github.io/maplayer/reference/set_basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base map by adding the object — set_basemap","text":"x ggproto object list ggproto objects. basemap Either logical vector ggplot object. logical TRUE, add x ggplot2::ggplot(). FALSE, return x . ggplot, add x basemap object. ggproto object (list contains ggproto object), add x basemap object ggplot2::ggplot(). call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/theme_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the text, margins, or legend for a ggplot theme — theme_ext","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"Helper functions modifying ggplot theme. \"replace\" \"update\" options method parameter currently working; keeping method = NULL method = \"set\" recommended.","code":""},{"path":"https://elipousson.github.io/maplayer/reference/theme_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"","code":"theme_text(   font_family = NULL,   color = \"black\",   geom_text = TRUE,   hjust = NULL,   vjust = NULL,   method = NULL,   ... )  theme_margin(   margin = \"standard\",   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   block_width = NULL,   header = 0,   footer = 0,   fill = NA,   color = NA,   size = 0,   method = NULL,   ... )  theme_legend(   position = NULL,   justification = NULL,   margin = 8,   unit = \"pt\",   inset = TRUE,   nudge_inset = 0.05,   bgcolor = \"white\",   title = list(face = \"bold\", align = 0),   method = NULL,   ... )"},{"path":"https://elipousson.github.io/maplayer/reference/theme_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"font_family Font family, Default: 'Helvetica' NULL, font_family pulled current set theme helpful resetting text families theme. color Color text elements (passed ggplot2::element_text() theme_text), plot.background (passed ggplot2::element_rect() theme_margin). Default: NA. geom_text TRUE, update text family ggplot2::geom_text(), ggplot2::geom_sf_text(), ggplot2::geom_label(), ggplot2::geom_sf_label() match font_family color. FALSE, make changes theme. Default: TRUE. hjust, vjust Horizontal vertical justification. method Method name ggplot2 geom function use modifying theme (\"set\", \"update\", \"replace\"); defaults NULL. ... Additional parameters passed ggplot2::theme(). margin Margin distance, margin style supported get_margin() margin object; defaults 10. paper Paper, Default: 'letter'. orientation Page orientation, Default: NULL. Supported options \"portrait\", \"landscape\", \"square\". dist Margin distance (single value used sides), Default: NULL unit Legend margin units; defaults 'pt'. block_width Plot map width units. paper block_width provided, margins half distance two evenly distributed. sets margin distance height well width work well header footers improved future. header, footer Header footer height units; defaults 0. Please note: headers footers currently supported \"px\" units. fill Fill plot.background theme element passed ggplot2::element_rect() Default: NA. size Passed size ggplot2::element_rect() define plot.background theme element. position Legend position (“left”,“top”, “right”, “bottom”) two-element numeric vector set position using Normalized Parent Coordinates (\"npc\"); defaults NULL justification NULL, justification set \"center\"; defaults NULL. Use justification set legend position inset = FALSE. Supports \"topleft\", \"bottomleft\", \"topright\", \"bottomright\" values. inset TRUE position \"topleft\", \"bottomleft\", \"topright\", \"bottomright\", place legend inset position; defaults TRUE. nudge_inset Position adjustment \"npc\" units use inset legends. Defaults 0.05. bgcolor Fill color legend background; defaults 'white'. title Attributes use legend.title text (e.g. face align).","code":""},{"path":[]},{"path":[]},{"path":"https://elipousson.github.io/maplayer/news/index.html","id":"id_0109003-development-version","dir":"Changelog","previous_headings":"","what":"0.1.0.9003 (2023-08-25)","title":"maplayer (development version)","text":"Add make_mapbox_map() function fix outstanding issues make_layer_map() helper. Add ggtext Suggests (supporting new use_md parameter labs_ext()) Add lwgeom Suggests (avoiding error popped layer_count()) Add alpha fixed aesthetic parameter layer_location() Add ggplot2::geom_sf_text ggplot2::geom_sf_label re-exports Update map_icons temaki v5.4.0","code":""},{"path":"https://elipousson.github.io/maplayer/news/index.html","id":"maplayer-0109002-2023-05-05","dir":"Changelog","previous_headings":"","what":"maplayer 0.1.0.9002 (2023-05-05)","title":"maplayer 0.1.0.9002 (2023-05-05)","text":"Add lower-level make_layer_map() helper make_location_map(). Rename make_basemap() set_basemap()","code":""},{"path":"https://elipousson.github.io/maplayer/news/index.html","id":"maplayer-0109001-2023-04-10","dir":"Changelog","previous_headings":"","what":"maplayer 0.1.0.9001 (2023-04-10)","title":"maplayer 0.1.0.9001 (2023-04-10)","text":"Add layer_arrow(). Add default filetype (“gpkg”) layer_location_data(). Rename null.ok parameter allow_null. Add ggplot2::geom_sf() re-exports. Update map_icons maki v8.0.1 temaki v5.3.0. Add papersize cliExtras Imports. Remove ggsave_ext(), map_ggsave_ext(), ggsave_social() package functions add reexports papersize. Drop purrr Imports adopt rlang equivalents standalone-purrr.R.","code":""},{"path":"https://elipousson.github.io/maplayer/news/index.html","id":"maplayer-0109000-2022-10-13","dir":"Changelog","previous_headings":"","what":"maplayer 0.1.0.9000 (2022-10-13)","title":"maplayer 0.1.0.9000 (2022-10-13)","text":"First version package!","code":""}]
