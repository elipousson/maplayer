% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_frame.R
\name{layer_frame}
\alias{layer_frame}
\alias{make_frame}
\title{Create map layer with shape framing a simple feature object}
\usage{
layer_frame(
  data,
  dist = NULL,
  diag_ratio = NULL,
  unit = "meter",
  frame = "circle",
  scale = 1,
  rotate = 0,
  inscribed = FALSE,
  color = "black",
  size = 1,
  linetype = "solid",
  fill = "white",
  neatline = TRUE,
  expand = FALSE,
  union = TRUE,
  ...
)

make_frame(
  x,
  frame = "circle",
  scale = 1,
  rotate = 0,
  inscribed = FALSE,
  dTolerance = 0
)
}
\arguments{
\item{data}{\code{sf} or \code{bbox} class object}

\item{dist}{buffer distance in units. Optional.}

\item{diag_ratio}{ratio of diagonal distance of area's bounding box used as
buffer distance. e.g. if the diagonal distance is 3000 meters and the
"diag_ratio = 0.1"  a 300 meter will be used. Ignored when \code{dist} is
provided.}

\item{unit}{Buffer units; defaults to meter.}

\item{frame}{Type of framing shape to add, "circle" or "square" around data.}

\item{scale}{numeric; scale factor, Default: 1}

\item{rotate}{numeric; degrees to rotate (-360 to 360), Default: 0}

\item{inscribed}{If \code{TRUE}, make circle or square inscribed within x, if
\code{FALSE}, make it circumscribed.}

\item{color}{Color of panel border, Default: 'black'}

\item{size}{Size of panel border, Default: 1}

\item{linetype}{Line type of panel border, Default: 'solid'}

\item{fill}{Fill color for frame.}

\item{neatline}{If TRUE, add a neatline to the returned layer.}

\item{expand}{Default \code{FALSE.} If \code{TRUE}, the function adds
\code{\link[ggplot2:scale_continuous]{ggplot2::scale_y_continuous()}} and
\code{\link[ggplot2:scale_continuous]{ggplot2::scale_x_continuous()}} to expand the map extent to
provided parameters.}

\item{union}{If \code{TRUE}, union data before buffering and creating frame;
defaults to \code{TRUE}.}

\item{...}{Additional parameters passed to \link{layer_location_data}. May include
additional fixed aesthetics (e.g. alpha) or "fn" to apply to the frame
object.}

\item{x}{A sf, sfc, or bbox object}

\item{dTolerance}{numeric; tolerance parameter, specified for all or for each
feature geometry. If you run \code{st_simplify}, the input data is
specified with long-lat coordinates and \code{sf_use_s2()} returns
\code{TRUE}, then the value of \code{dTolerance} must be specified in
meters.}
}
\description{
Wraps \link[sfext:st_misc]{sfext::st_circle}, \link[sfext:st_misc]{sfext::st_square}, and \link{layer_neatline}.
}
\examples{
nc <- sfext::read_sf_path(system.file("shape/nc.shp", package = "sf"))

raleigh_msa <-
  getdata::get_location(
    type = nc,
    name_col = "NAME",
    name =  c("Franklin", "Johnston", "Wake"),
    crs = 3857
    )

ggplot2::ggplot() +
  layer_frame(
    data = raleigh_msa,
    frame = "circle",
    fill = "lightyellow",
    inscribed = FALSE
  ) +
  layer_location_data(
    data = raleigh_msa,
    mapping = ggplot2::aes(fill = NAME),
    alpha = 0.5
  ) +
  ggplot2::guides(
    fill = "none"
  )
}
\seealso{
Other layer: 
\code{\link{layer_location_data}()},
\code{\link{layer_neatline}()},
\code{\link{layer_scaled}()}
}
\concept{layer}
