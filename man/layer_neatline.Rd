% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_neatline.R
\name{layer_neatline}
\alias{layer_neatline}
\alias{set_map_limits}
\alias{set_neatline}
\title{Set map limits to a bounding box with a buffer and set aspect ratio}
\usage{
layer_neatline(
  data = NULL,
  dist = getOption("maplayer.dist"),
  diag_ratio = getOption("maplayer.diag_ratio"),
  unit = getOption("maplayer.unit", default = "meter"),
  asp = getOption("maplayer.asp"),
  crs = getOption("maplayer.crs"),
  nudge = getOption("maplayer.nudge"),
  color = "black",
  linewidth = 0.5,
  linetype = "solid",
  bgcolor = "white",
  expand = TRUE,
  hide_grid = TRUE,
  label_axes = "----",
  axis.title = NULL,
  axis.text = NULL,
  axis.ticks = NULL,
  axis.ticks.length = ggplot2::unit(x = 0, units = "mm"),
  axis.line = NULL,
  panel.grid = NULL,
  panel.grid.major = NULL,
  panel.grid.minor = NULL,
  panel.border = NULL,
  panel.background = NULL,
  plot.background = NULL,
  plot.margin = NULL,
  default_plot_margin = ggplot2::margin(1, 1, 1, 1),
  xlim = NULL,
  ylim = NULL,
  ...
)

set_neatline(x = NULL, neatline = TRUE, data = NULL, crs = NULL, ...)
}
\arguments{
\item{data}{A \code{sf}, \code{sfc}, or \code{bbox} class object.}

\item{dist}{buffer distance in units. Optional.}

\item{diag_ratio}{ratio of diagonal distance of area's bounding box used as
buffer distance. e.g. if the diagonal distance is 3000 meters and the
"diag_ratio = 0.1"  a 300 meter will be used. Ignored when \code{dist} is
provided.}

\item{unit}{Units for buffer. Supported options include "meter", "foot",
"kilometer", and "mile", "nautical mile" Common abbreviations (e.g. "km"
instead of "kilometer") are also supported. Distance in units is converted
to units matching GDAL units for x; defaults to "meter"}

\item{asp}{Aspect ratio of width to height as a numeric value (e.g. 0.33) or
character (e.g. "1:3"). If numeric, \code{\link[sfext:get_asp]{get_asp()}} returns the same value
without modification.}

\item{crs}{The coordinate reference system (CRS) into which all data should
be projected before plotting. If not specified, will use the CRS defined
in the first sf layer of the plot.}

\item{nudge}{Passed as to parameter \code{\link[sfext:st_nudge]{st_nudge()}} when not \code{NULL}. A numeric
vector, a \code{sf} object, or any other object that can be converted to a
simple feature collection with \code{as_sfc()}..}

\item{color}{Color of panel border, Default: 'black'}

\item{linewidth}{Line width of panel border, Default: 0.5}

\item{linetype}{Line type of panel border, Default: 'solid'}

\item{bgcolor}{Fill color of panel background; defaults to "white". If
"none", panel background is set to \code{\link[ggplot2:element]{ggplot2::element_blank()}}}

\item{expand}{If \code{TRUE}, the default, adds a small expansion factor to
the limits to ensure that data and axes don't overlap. If \code{FALSE},
limits are taken exactly from the data or \code{xlim}/\code{ylim}.}

\item{hide_grid}{If \code{TRUE}, hide grid lines. Default: \code{TRUE}}

\item{label_axes}{A description of which axes to label passed to
\code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}}; defaults to '----' which hides all axes labels.}

\item{axis.title, axis.text, axis.ticks, axis.ticks.length, axis.line}{Theme
elements passed as is if label_axes is anything other than "----".}

\item{panel.grid, panel.grid.major, panel.grid.minor}{Passed as is if hide_grid
is FALSE.}

\item{panel.border, panel.background, plot.background, plot.margin}{panel.border
is used as is if not NULL or \code{ggplot2::element_blank()} if it is NULL
unless color is NA or "none". panel.background and plot.background are used
as is or \code{ggplot2::element_blank()} if bg color is NA or "none".
plot.margin is set to \code{ggplot2::margin(1, 1, 1, 1)} if \code{NULL} or
\code{ggplot2::margin(0, 0, 0, 0)} if expand is \code{FALSE}.}

\item{default_plot_margin}{Defaults to \code{ggplot2::margin(1, 1, 1, 1)}. Ignored
if \code{expand = FALSE}}

\item{xlim, ylim}{Limits for the x and y axes. These limits are specified
in the units of the default CRS. By default, this means projected coordinates
(\code{default_crs = NULL}). How limit specifications translate into the exact
region shown on the plot can be confusing when non-linear or rotated coordinate
systems are used as the default crs. First, different methods can be preferable
under different conditions. See parameter \code{lims_method} for details. Second,
specifying limits along only one direction can affect the automatically generated
limits along the other direction. Therefore, it is best to always specify limits
for both x and y. Third, specifying limits via position scales or \code{xlim()}/\code{ylim()}
is strongly discouraged, as it can result in data points being dropped from the plot even
though they would be visible in the final plot region.}

\item{...}{Additional parameters passed to \code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}}.}

\item{x}{For \code{\link[=set_neatline]{set_neatline()}}, a \code{ggplot} class object, \code{ggproto} class
object or list of \code{ggproto} objects to combine with neatline layer.}

\item{neatline}{A logical object, \code{CoordSf} object, or a list containing a
\code{CoordSf} object (typically from \code{\link[=layer_neatline]{layer_neatline()}}) added to layer by
\code{\link[=set_neatline]{set_neatline()}}.
\itemize{
\item If logical and \code{TRUE}, add a neatline layer using data, crs and any
additional parameters passed to ... If logical and \code{FALSE}, return x as is.
\item If object from \code{\link[=layer_neatline]{layer_neatline()}}, add it as is.
}}
}
\value{
List of \link[ggplot2:ggsf]{ggplot2::coord_sf} and \link[ggplot2:theme]{ggplot2::theme} calls.
}
\description{
Set limits for a map to the bounding box of a feature using
\code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}}. Optionally, adjust the x size by applying a buffer
and/or adjust the aspect ratio of the limiting bounding box to match a set
aspect ratio.
}
\examples{
library(ggplot2)

nc <- sf::read_sf(system.file("shape/nc.shp", package = "sf"))

ggplot() +
  layer_location_data(data = nc) +
  layer_neatline(data = nc[1, ], asp = 1, color = "red", linewidth = 1, linetype = "dashed")

ggplot() +
  layer_location_data(data = nc) +
  layer_neatline(data = nc[1, ], dist = 20, unit = "mi", color = "none")
}
\seealso{
\code{\link[ggplot2:ggsf]{ggplot2::CoordSf()}}

Other layer: 
\code{\link{layer_frame}()},
\code{\link{layer_location_data}()},
\code{\link{layer_scaled}()}
}
\concept{layer}
