% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_marked.R
\name{layer_marked}
\alias{layer_marked}
\alias{layer_show_mark}
\title{Use ggforce to create an annotation layer using simple feature data}
\usage{
layer_marked(
  data,
  fn = NULL,
  mapping = NULL,
  label_col = NULL,
  desc_col = NULL,
  geom = NULL,
  center = FALSE,
  font_family = NULL,
  font_face = c("bold", "plain"),
  font_color = NULL,
  expand = ggplot2::unit(5, "mm"),
  radius = expand,
  drop_shadow = FALSE,
  x_offset = 5,
  y_offset = 5,
  sigma = 0.5,
  ...
)
}
\arguments{
\item{data}{A \code{sf}, \code{sfc}, or \code{bbox} object that can be converted with
\link[sfext:as_sf]{sfext::as_sf}}

\item{fn}{Function to apply to data before passing to geom, typically a
predicate or filter to define area for annotation. A filter can also be
passed to any of the {ggforce} functions using the filter aesthetic.
Default: NULL}

\item{mapping}{Aesthetic mapping to pass to geom, Default: NULL}

\item{label_col}{Label column name}

\item{geom}{geom to use for layer ("rect", "circle", "ellipse", or "hull"),
Default: \code{NULL}}

\item{center}{If \code{FALSE}, use \link[sfext:st_cast_ext]{sfext::st_cast_ext} MULTIPOLYGON and
POLYGON data to POINT; If \code{TRUE}, use \link[sfext:st_misc]{sfext::st_center} use centroid as
the feature geometry. Defaults to FALSE.}

\item{font_family, font_face, font_color}{Parameters passed to label.family,
label.fontface, and label.colour. If \code{NULL}, values are set to match
\link[ggplot2:geom_text]{ggplot2::geom_label} defaults. Defaults to \code{NULL}.}

\item{expand}{A numeric or unit vector of length one, specifying the
expansion amount. Negative values will result in contraction instead. If the
value is given as a numeric it will be understood as a proportion of the
plot area width.}

\item{radius}{As \code{expand} but specifying the corner radius.}

\item{drop_shadow}{If \code{TRUE}, use \link[ggfx:with_shadow]{ggfx::with_shadow} to add a drop shadow to the label layer. Defaults to \code{FALSE}.}

\item{x_offset, y_offset, sigma}{Parameters passed to ggfx::with_shadow if \code{drop_shadow = TRUE}.}

\item{...}{Additional parameters passed to \code{\link[ggforce:geom_mark_rect]{ggforce::geom_mark_rect()}},
\code{\link[ggforce:geom_mark_circle]{ggforce::geom_mark_circle()}}, \code{\link[ggforce:geom_mark_ellipse]{ggforce::geom_mark_ellipse()}}, or
\code{\link[ggforce:geom_mark_hull]{ggforce::geom_mark_hull()}} on to \code{\link[ggplot2:layer]{ggplot2::layer()}}}
}
\description{
Use \code{\link[ggforce:geom_mark_rect]{ggforce::geom_mark_rect()}}, \code{\link[ggforce:geom_mark_circle]{ggforce::geom_mark_circle()}},
\code{\link[ggforce:geom_mark_ellipse]{ggforce::geom_mark_ellipse()}}, or \code{\link[ggforce:geom_mark_hull]{ggforce::geom_mark_hull()}} to annotate
simple feature objects. This function modifies the geometry and sets the stat
to "st_coordinates" to make it easy to use these annotation geoms with simple
feature objects.
}
\section{Geometry conversion for MULTIPOLYGON or POLYGON data}{


If cast is \code{FALSE} and the data geometry type is MULTIPOLYGON or POLYGON, the
annotation uses a centroid for the annotation geometry. If cast is \code{TRUE},
the data is converted to POINT geometry using \code{\link[sf:st_cast]{sf::st_cast()}} and the
modified geometry passed on to selected geom.
}

\section{Setting label and description}{


Labels and descriptions can be included in the aesthetic mapping for the
layer consistent with the standard documented approaches for all four
functions.

Labels and descriptions also can be set in two non-standard ways:
\itemize{
\item Setting label_col and/or or desc_col to character strings with the column
names for labels and/or descriptions
\item Setting label_col and/or desc_col with the value of the label/description
}

If the first approach is used, label_col and desc_col can also can be created
or modified by a function provided to the fn parameter. Otherwise, the
columns must be present in the data to work. If the second approach is used,
the length and order of vector provided to label_col and/or desc_col must
match that length and order of the data (after the fn is applied).
}

\examples{
\dontrun{
if (interactive()) {
  library(ggplot)
  library(overedge)

  ggplot() +
    layer_location_data(
      data = "neighborhoods",
      package = "mapbaltimore"
    ) +
    layer_marked(
      data = get_location(
        type = "council district",
        name = "District 12",
        package = "mapbaltimore"
      ),
      geom = "hull",
      color = "red",
      size = 1.5
    )
}
}
}
\seealso{
\itemize{
\item \code{\link[ggforce:geom_mark_rect]{ggforce::geom_mark_rect()}}
\item \code{\link[ggforce:geom_mark_circle]{ggforce::geom_mark_circle()}}
\item \code{\link[ggforce:geom_mark_ellipse]{ggforce::geom_mark_ellipse()}}
\item \code{\link[ggforce:geom_mark_hull]{ggforce::geom_mark_hull()}}
}
}
